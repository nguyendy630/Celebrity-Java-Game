#BlueJ class context
comment0.target=CelebrityGame
comment0.text=\n\ The\ framework\ for\ the\ Celebrity\ Game\ project\n\ \n\ @author\ cody.henrichsen\n\ @version\ 2.3\ 25/09/2018\ refactored\ the\ prepareGame\ and\ play\ methods\n
comment1.params=
comment1.target=CelebrityGame()
comment1.text=\n\ Builds\ the\ game\ and\ starts\ the\ GUI\n
comment10.params=
comment10.target=java.lang.String\ sendAnswer()
comment10.text=\n\ Accessor\ method\ for\ the\ games\ answer\ to\ maintain\ low\ coupling\ between\n\ classes\n\ \n\ @return\ The\ String\ answer\ from\ the\ current\ celebrity.\n
comment2.params=name
comment2.target=boolean\ validateCelebrity(java.lang.String)
comment2.text=\n\ Validates\ the\ name\ of\ the\ celebrity.\ It\ must\ have\ at\ least\ 4\ characters.\n\ @param\ name\ The\ name\ of\ the\ Celebrity\n\ @return\ If\ the\ supplied\ Celebrity\ is\ valid\n
comment3.params=clue\ type
comment3.target=boolean\ validateClue(java.lang.String,\ java.lang.String)
comment3.text=\n\ Checks\ that\ the\ supplied\ clue\ has\ at\ least\ 10\ characters\ or\ is\ a\ series\ of\ clues\n\ This\ method\ would\ be\ expanded\ based\ on\ your\ subclass\ of\ Celebrity.\n\ @param\ clue\ The\ text\ of\ the\ clue(s)\n\ @param\ type\ Supports\ a\ subclass\ of\ Celebrity\ \n\ @return\ If\ the\ clue\ is\ valid.\n
comment4.params=name\ guess\ type
comment4.target=void\ addCelebrity(java.lang.String,\ java.lang.String,\ java.lang.String)
comment4.text=\n\ Adds\ a\ Celebrity\ of\ specified\ type\ to\ the\ game\ list\n\ \n\ @param\ name\n\ \ \ \ \ \ \ \ \ \ \ \ The\ name\ of\ the\ celebrity\n\ @param\ guess\n\ \ \ \ \ \ \ \ \ \ \ \ The\ clue(s)\ for\ the\ celebrity\n\ @param\ type\n\ \ \ \ \ \ \ \ \ \ \ \ What\ type\ of\ celebrity\n
comment5.params=
comment5.target=void\ play()
comment5.text=\n\ Asserts\ that\ the\ list\ is\ initialized\ and\ contains\ at\ least\ one\ Celebrity.\n\ Sets\ the\ current\ celebrity\ as\ the\ first\ item\ in\ the\ list.\ Opens\ the\ game\n\ play\ screen.\n
comment6.params=
comment6.target=int\ getCelebrityGameSize()
comment6.text=\n\ Accessor\ method\ for\ the\ current\ size\ of\ the\ list\ of\ celebrities\n\ \n\ @return\ Remaining\ number\ of\ celebrities\n
comment7.params=guess
comment7.target=boolean\ processGuess(java.lang.String)
comment7.text=\n\ Determines\ if\ the\ supplied\ guess\ is\ correct.\n\ \n\ @param\ guess\n\ \ \ \ \ \ \ \ \ \ \ \ The\ supplied\ String\n\ @return\ Whether\ it\ matches\ regardless\ of\ case\ or\ extraneous\ external\n\ \ \ \ \ \ \ \ \ spaces.\n
comment8.params=
comment8.target=java.lang.String\ sendClue()
comment8.text=\n\ Accessor\ method\ for\ the\ games\ clue\ to\ maintain\ low\ coupling\ between\n\ classes\n\ \n\ @return\ The\ String\ clue\ from\ the\ current\ celebrity.\n
comment9.params=
comment9.target=void\ prepareGame()
comment9.text=\n\ Prepares\ the\ game\ to\ start\ by\ re-initializing\ the\ celebGameList\ and\ having\ the\ gameFrame\ open\ the\ start\ screen.\n
numComments=11
